@page "/UpdateQuiz/{Id}"
@layout NavbarLayout

@inject QuizService QuizService
<PageTitle>Quiz App</PageTitle>

<EditForm Model="@Quiz" class="d-flex flex-column w-25 gap-2" OnSubmit="Handle">
    
    <h3>Update Quiz</h3>
    
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="form-group">
        <label class="form-label mb-2">Title</label>
        <InputText @bind-Value="Quiz.Title" class="form-control"/>
    </div>

    <p class="@(IsSuccess ? "text-success" : "text-danger")">@Message</p>
    <button class="btn btn-primary" type="submit">Update</button>
</EditForm>

@code {
    [Parameter] public string Id { get; set; } = string.Empty;
    private QuizDetailsDto Quiz { get; set; } = new();
    private string Message { get; set; } = string.Empty;
    private bool IsSuccess { get; set; } = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var response = await QuizService.GetQuizById(Id);
            if (!response.IsSuccess)
            {
                IsSuccess = false;
                Message = response.Message;
                return;
            }
            
            Quiz = response.Data!;
            StateHasChanged();
        }
    }

    private async Task Handle()
    {
        var dto = new UpdateQuizDto
        {
            Id = Quiz.Id,
            Title = Quiz.Title
        };
        
        var response = await QuizService.UpdateQuiz(dto);
        IsSuccess = response.IsSuccess;
        Message = response.Message;
        StateHasChanged();
    }

}